plugins {
	id 'com.google.cloud.tools.jib' version '2.5.0'
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.1'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom 'org.junit:junit-bom:5.6.2'
		mavenBom 'org.testcontainers:testcontainers-bom:1.15.0-rc1'
	}
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

//	implementation 'org.apache.kafka:kafka-streams'
//	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.testcontainers:testcontainers:1.15.0-rc1'
	testImplementation 'org.testcontainers:testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
//	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

test {
	useJUnitPlatform()
}

jib {
	from {
		image = 'openjdk:11'
	}
	to {
		image = "speech4j/${name}"
		tags = ['1.0.0', 'latest']
		auth {
			username = System.getenv('DOCKER_ID')
			password = System.getenv('DOCKER_PASSWORD')
		}
	}
	container {
		volumes = ["/tmp"]
	}
}
tasks.build.dependsOn tasks.jib